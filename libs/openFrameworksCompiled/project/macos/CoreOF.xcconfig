// define which C++ library is required to build, based on target architecture
CLANG_CXX_LIBRARY = libc++
CLANG_ENABLE_OBJC_ARC = YES
CLANG_CXX_LANGUAGE_STANDARD = c++20
//CLANG_C_LANGUAGE_STANDARD = c17
MACOSX_DEPLOYMENT_TARGET = 11.5

HEADER_OF = $(OF_PATH)/libs/openFrameworks/**
HEADER_OF_LIBS = $(OF_PATH)/libs/macos/include

//------- Libraries
OF_CORE_LIBS = $(OF_PATH)/libs/openFrameworksCompiled/lib/macos/openFrameworks.a
OF_CORE_LIBS[config=Debug] = $(OF_PATH)/libs/openFrameworksCompiled/lib/macos/openFrameworksDebug.a

OF_CORE_LIBS = $(inherited) $(OF_PATH)/libs/macos/lib/libFreeImage.a
OF_CORE_LIBS = $(inherited) $(OF_PATH)/libs/macos/lib/libbrotlicommon.a
OF_CORE_LIBS = $(inherited) $(OF_PATH)/libs/macos/lib/libbrotlidec.a
OF_CORE_LIBS = $(inherited) $(OF_PATH)/libs/macos/lib/libbrotlienc.a
OF_CORE_LIBS = $(inherited) $(OF_PATH)/libs/macos/lib/libcairo.a
OF_CORE_LIBS = $(inherited) $(OF_PATH)/libs/macos/lib/libfreetype.a
OF_CORE_LIBS = $(inherited) $(OF_PATH)/libs/macos/lib/libglew.a
OF_CORE_LIBS = $(inherited) $(OF_PATH)/libs/macos/lib/libglfw3.a
OF_CORE_LIBS = $(inherited) $(OF_PATH)/libs/macos/lib/libglm.a
OF_CORE_LIBS = $(inherited) $(OF_PATH)/libs/macos/lib/libpng16.a
OF_CORE_LIBS = $(inherited) $(OF_PATH)/libs/macos/lib/libpugixml.a
OF_CORE_LIBS = $(inherited) $(OF_PATH)/libs/macos/lib/libtess2.a
OF_CORE_LIBS = $(inherited) $(OF_PATH)/libs/macos/lib/liburiparser.a
OF_CORE_LIBS = $(inherited) $(OF_PATH)/libs/macos/lib/libz.a

OF_CORE_LIBS = $(inherited) $(OF_PATH)/libs/macos/lib/libssl.a
OF_CORE_LIBS = $(inherited) $(OF_PATH)/libs/macos/lib/libcurl.a
OF_CORE_LIBS = $(inherited) $(OF_PATH)/libs/macos/lib/libcrypto.a

OF_CORE_LIBS = $(inherited) $(OF_PATH)/libs/macos/lib/libpixman-1.a
//OF_CORE_LIBS = $(inherited) $(OF_PATH)/libs/macos/lib/libpixman-arm-neon.a


LIBS_SEARCH_PATHS = $(OF_PATH)/libs/macos/lib

OF_CORE_HEADERS = $(HEADER_OF) $(HEADER_OF_LIBS)

OF_CORE_FRAMEWORKS = -framework Accelerate -framework AGL -framework AppKit -framework ApplicationServices -framework AudioToolbox -framework AVFoundation -framework Cocoa -framework CoreAudio -framework CoreFoundation -framework CoreMedia -framework CoreServices -framework CoreVideo -framework Foundation -framework IOKit -framework OpenGL -framework QuartzCore -framework Security -framework SystemConfiguration -framework Metal


ALWAYS_SEARCH_USER_PATHS = NO
//DISABLE_MANUAL_TARGET_ORDER_BUILD_WARNING = YES
GCC_PREPROCESSOR_DEFINITIONS = $(inherited)


ENABLE_STRICT_OBJC_MSGSEND = YES
DEAD_CODE_STRIPPING = YES
ONLY_ACTIVE_ARCH = YES
//OTHER_CODE_SIGN_FLAGS = --deep
COMBINE_HIDPI_IMAGES = YES
INSTALL_PATH = /Applications

OTHER_CPLUSPLUSFLAGS = -D__MACOSX_CORE__
CODE_SIGN_ENTITLEMENTS = of.entitlements
ENABLE_TESTABILITY = YES
MACOSX_DEPLOYMENT_TARGET = 11.5
//GCC_OPTIMIZATION_LEVEL[config=Debug] = 0
//GCC_OPTIMIZATION_LEVEL[config=Release] = 3

CC = $(OF_PATH)/scripts/macos/cc.sh
CXX = $(OF_PATH)/scripts/macos/cxx.sh

// Great for disabling and addressing all warnings
GCC_WARN_64_TO_32_BIT_CONVERSION = YES

SDKROOT = macosx
WRAPPER_EXTENSION = app

SKIP_INSTALL = NO
//SKIP_INSTALL = YES
CONFIGURATION_BUILD_DIR = $(SRCROOT)/bin/




// Trazendo do pbxproj
//ASSETCATALOG_COMPILER_GENERATE_SWIFT_ASSET_SYMBOL_EXTENSIONS = YES
//LIBRARY_SEARCH_PATHS = $(inherited)
//ARCHS = $(ARCHS_STANDARD)
//FRAMEWORK_SEARCH_PATHS = $(inherited)
//LIBRARY_SEARCH_PATHS = $(inherited)

// Debug was yes, release no

// Specifies whether binary files that are copied during the build, such as in a Copy Bundle Resources or Copy Files build phase,
// should be stripped of debugging symbols. It does not cause the linked product of a target to be strippedâ€”use
// STRIP_INSTALLED_PRODUCT for that.
//COPY_PHASE_STRIP[config=Debug] = NO
//COPY_PHASE_STRIP[config=Release] = YES

