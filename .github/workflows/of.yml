name: OF

on:
  push:
    paths-ignore:
      # - "ofGen/*"
      - "**/*.md"
      - "**/*.txt"
      - "examples/**"

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

env:
  ccache: ccache

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Install Packages - Apt
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libcairo2-dev
          version: 1.0

      - name: test
        run: |
          pkg-config --libs --cflags cairo

  ofworks:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Packages - Brew
        if: matrix.os == 'macos-latest'
        uses: tecolicom/actions-use-homebrew-tools@v1.3
        with:
          tools: wget2 yaml-cpp fmt ccache nlohmann-json # fmt

      # - name: Install Packages - Apt
      #   if: matrix.os == 'ubuntu-latest'
      #   uses: awalsh128/cache-apt-pkgs-action@latest
      #   with:
      #     packages: libssl3 libcurl4 brotli libcurl4-openssl-dev nlohmann-json3-dev libyaml-cpp-dev wget2 make libjack-jackd2-0 libjack-jackd2-dev freeglut3-dev libasound2-dev libxmu-dev libxxf86vm-dev g++ libgl1-mesa-dev libglu1-mesa-dev libraw1394-dev libudev-dev libdrm-dev libglew-dev libopenal-dev libsndfile1-dev libfreeimage-dev libcairo2-dev libfreetype6-dev libpulse-dev libusb-1.0-0-dev libgtk2.0-dev libopencv-dev libassimp-dev librtaudio-dev gdb libglfw3-dev liburiparser-dev libpugixml-dev libgconf-2-4 libgtk2.0-0 libpoco-dev libxcursor-dev libxi-dev libxinerama-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev gstreamer1.0-libav gstreamer1.0-pulseaudio gstreamer1.0-x gstreamer1.0-plugins-bad gstreamer1.0-alsa gstreamer1.0-plugins-base gstreamer1.0-plugins-good
      #     version: 1.0

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2.17
        with:
          key: ${{ matrix.cfg.platform }}-${{ matrix.cfg.target }}

      - name: Libs
        run: ./libs/libs.sh

      - name: ofGen
        run: |
          cd ofGen
          ./compile.sh
          ./install.sh

      - name: XCodebuild Core
        if: matrix.os == 'macos-latest'
        run: |
          cd libs/openFrameworksCompiled/project/macos
          xcodebuild -arch arm64

      # - name: Make OF Core
      #   run: |
      #     cd libs/openFrameworksCompiled/project/
      #     make -j Debug

      - name: All Addons Example
        run: |
          cd examples/templates/allAddonsExample
          ofgen buildrun
          # xcodebuild -arch arm64

      - name: Tests
        run: ./scripts/tests.sh
