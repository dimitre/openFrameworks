name: build-linux64-and-arm

on:
  push:
    paths-ignore:
    - '**/*.md'
    - 'examples/**'
  pull_request:
    paths-ignore:
    - '**/*.md'
    - 'examples/**'
    
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-linux-platforms:
    runs-on: ubuntu-latest
    strategy:
        matrix:
          cfg:
          - {target: linux64, libs: 64gcc6}
          - {target: linuxarmv6l, libs: armv6l}
#          - {target: linuxarmv7l, libs: armv7l}
    env:
     TARGET: ${{matrix.cfg.target}}
    steps:
    - uses: actions/checkout@v3
    - uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: gdb curl libjack-jackd2-0 libjack-jackd2-dev freeglut3-dev libasound2-dev libxmu-dev libxxf86vm-dev g++ libglu1-mesa-dev libraw1394-dev libudev-dev libdrm-dev libglew-dev libopenal-dev libsndfile1-dev libfreeimage-dev libcairo2-dev libfreetype6-dev libssl-dev libpulse-dev libusb-1.0-0-dev libopencv-dev libassimp-dev librtaudio-dev liburiparser-dev libcurl4-openssl-dev libpugixml-dev libgconf-2-4 libgtk2.0-0 libpoco-dev libxcursor-dev libxi-dev libxinerama-dev 
        version: 1.0
    - uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: libglfw3-dev libboost-filesystem-dev libegl1-mesa-dev libgtk-3-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev  ${GSTREAMER_FFMPEG} gstreamer1.0-pulseaudio gstreamer1.0-x gstreamer1.0-plugins-bad gstreamer1.0-alsa gstreamer1.0-plugins-base gstreamer1.0-plugins-good 
        version: 1.0
        # libgl1-mesa-dev${XTAG} libgtk${GTK_VERSION}-dev  
        # libboost-filesystem${BOOST_VER}-dev 
        # 
        # ${GLFW_PKG}
    - name: Download libs
      run: ./scripts/linux/download_libs.sh -a ${{matrix.cfg.libs}};
    - name: Install dependencies
      run: ./scripts/ci/$TARGET/install.sh;
#    - name: Install gcc4
#      run: if [ ${{matrix.cfg.target}} = "64gcc4" ]; then
#                sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test;
#                sudo apt-get update -q;
#                sudo apt-get install gcc-4.9 g++-4.9;
#            fi
    - name: Build
      run: if [ "$TARGET" = "linux64" ]; then
            scripts/ci/$TARGET/build.sh;
            scripts/ci/$TARGET/run_tests.sh;
           else
            scripts/ci/$TARGET/build.sh;
           fi
    - name: Upload Libs
      run: scripts/ci/upload_of_lib.sh;
      env:
        GA_CI_SECRET: ${{ secrets.CI_SECRET }}

