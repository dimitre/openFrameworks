name: build-linux64-and-arm

on:
  push:
    paths-ignore:
    - '**/*.md'
    - 'examples/**'
  pull_request:
    paths-ignore:
    - '**/*.md'
    - 'examples/**'
    
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-linux-platforms:
    runs-on: ubuntu-22.04
    strategy:
        matrix:
          cfg:
          - {target: linux64, libs: 64gcc6}
          - {target: linuxarmv6l, libs: armv6l}
#          - {target: linuxarmv7l, libs: armv7l}
    env:
     TARGET: ${{matrix.cfg.target}}
    steps:
    - uses: actions/checkout@v3
    - name: Update apt
      run: |
        sudo apt-get purge grub\*
        sudo apt-get install grub-efi
        sudo apt-get autoremove
        sudo update-grub
        sudo apt remove php* --yes
        sudo apt remove aspnet* --yes
        sudo apt remove dotnet* --yes
        # sudo apt remove grub-efi-amd64-signed --yes
        sudo apt update --yes
        sudo apt upgrade --yes

    - uses: awalsh128/cache-apt-pkgs-action@latest
      id: cache-apt    
      with:
        packages: libjack-jackd2-0 libjack-jackd2-dev freeglut3-dev libasound2-dev libxmu-dev libxxf86vm-dev g++ libgl1-mesa-dev libglu1-mesa-dev libraw1394-dev libudev-dev libdrm-dev libglew-dev libopenal-dev libsndfile1-dev libfreeimage-dev libcairo2-dev libfreetype6-dev libssl-dev libpulse-dev libusb-1.0-0-dev libgtk-3-dev libopencv-dev libassimp-dev librtaudio-dev libboost-filesystem-dev libgstreamer1.0-0 libgstreamer-plugins-base1.0-dev gstreamer1.0-libav gstreamer1.0-pulseaudio gstreamer1.0-x gstreamer1.0-plugins-bad gstreamer1.0-alsa gstreamer1.0-plugins-base gstreamer1.0-plugins-good gdb libglfw3-dev liburiparser-dev libcurl4-openssl-dev libpugixml-dev libgconf-2-4 libgtk2.0-0 libpoco-dev libxcursor-dev libxi-dev libxinerama-dev
        version: 1.0

    - name: Install dependencies
      run: ./scripts/ci/$TARGET/install.sh;

    - name: Cache libs
      id: cache-libs
      uses: actions/cache@v3
      env:
        cache-name: cache-install-libs
      with:
        path: |
          libs
          addons/ofxAssimpModelLoader/libs/**/
          addons/ofxKinect/libs/**/
          addons/ofxOpenCv/libs/**/
          addons/ofxSvg/libs/**/
          addons/ofxPoco/libs/**/

        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.h') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-

    - if: ${{ steps.cache-libs.outputs.cache-hit != 'true' }}
      name: Download libs
      run: ./scripts/linux/download_libs.sh -a ${{matrix.cfg.libs}};


    - name: Cache compile
      id: cache-compile
      uses: actions/cache@v3
      env:
        cache-name: cache-keep-compile
      with:
        path: libs/openFrameworksCompiled/lib/**/
        key: ${{ runner.os }}-${{matrix.cfg.opt}}-${{ env.cache-name }}-${{ hashFiles('**/*.cpp') }}
        restore-keys: |
          ${{ runner.os }}-${{matrix.cfg.opt}}-${{ env.cache-name }}-

    - name: Build
      run: if [ "$TARGET" = "linux64" ]; then
            scripts/ci/$TARGET/build.sh;
            scripts/ci/$TARGET/run_tests.sh;
           else
            scripts/ci/$TARGET/build.sh;
           fi
    - name: Upload Libs
      run: scripts/ci/upload_of_lib.sh;
      env:
        GA_CI_SECRET: ${{ secrets.CI_SECRET }}

