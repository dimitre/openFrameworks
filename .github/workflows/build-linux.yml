name: build-linux64-and-arm

on:
  push:
    paths-ignore:
    - '**/*.md'
  pull_request:
    paths-ignore:
    - '**/*.md'
    
jobs:

  build-linux-platforms:
    runs-on: ubuntu-18.04
    strategy:
        matrix:
          cfg:
          - {target: linux64, libs: 64gcc6}
          # - {target: linuxarmv6l, libs: armv6l}
          # - {target: linuxarmv7l, libs: armv7l}
    env:
     TARGET: ${{matrix.cfg.target}}
    steps:
    # - uses: awalsh128/cache-apt-pkgs-action@latest
      # with:
        # packages: freeglut3-dev libasound2-dev libxmu-dev libxxf86vm-dev g++ libgl1-mesa-dev libglu1-mesa-dev libraw1394-dev libudev-dev libdrm-dev libglew-dev libopenal-dev libsndfile-dev libfreeimage-dev libcairo2-dev libfreetype6-dev libssl-dev libpulse-dev libusb-1.0-0-dev libgtk2.0-dev libopencv-dev libegl1-mesa-dev libgles1 libgles2-mesa-dev libassimp-dev librtaudio-dev libboost-filesystem-dev libglfw3-dev  liburiparser-dev libcurl4-openssl-dev libpugixml-dev libpoco-dev libgconf-2-4 libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev  ${GSTREAMER_FFMPEG} gstreamer0.10-pulseaudio gstreamer0.10-x gstreamer0.10-plugins-bad gstreamer0.10-alsa gstreamer0.10-plugins-base gstreamer0.10-plugins-good
        # version: 1.0

    - uses: actions/checkout@v3
    # - run: apt update  # Only for Docker jobs
    - name: ccache 
      uses: hendrikmuhs/ccache-action@v1.2
    - name: Download libs
      run: ./scripts/linux/download_libs.sh -a ${{matrix.cfg.libs}};

    - name: Install dependencies
      run: ./scripts/ci/$TARGET/install.sh;
#    - name: Install gcc4
#      run: if [ ${{matrix.cfg.target}} = "64gcc4" ]; then
#                sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test;
#                sudo apt-get update -q;
#                sudo apt-get install gcc-4.9 g++-4.9;
#            fi

    - name: Build
      run: if [ "$TARGET" = "linux64" ]; then
            scripts/ci/$TARGET/build.sh;
            scripts/ci/$TARGET/run_tests.sh;
           else
            scripts/ci/$TARGET/build.sh;
           fi
    - name: Upload Libs
      run: scripts/ci/upload_of_lib.sh;
      env:
        GA_CI_SECRET: ${{ secrets.CI_SECRET }}

